# With infos from
# http://tjelvarolsson.com/blog/how-to-continuously-test-your-python-code-on-windows-using-appveyor/
# https://packaging.python.org/en/latest/appveyor/
# https://github.com/rmcgibbo/python-appveyor-conda-example

environment:
  matrix:
    - PYTHON_VERSION: "3.7"
      MINICONDA: C:\Miniconda37-x64
      ENV_FILE: "ci/travis/37-latest-conda-forge.yaml"

    - PYTHON_VERSION: "3.8"
      MINICONDA: C:\Miniconda37-x64
      ENV_FILE: "ci/travis/38-latest-conda-forge.yaml"

# all our python builds have to happen in tests_script...
build: false

init:
  - "ECHO %PYTHON_VERSION% %MINICONDA%"

install:
  # cancel older builds for the same PR
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }

  # set up environment
  - CALL "%MINICONDA%\\Scripts\\activate.bat"
  - conda config --set always_yes yes --set show_channel_urls true --set changeps1 no
  - conda update conda
  # this is basically equivalent to what conda init does.  It changes the "conda" to
  #    be a .bat script that sets appropriate PATH entries before conda hits problems.
  #  This PATH modification only works with conda 4.6+, but it won't hurt other versions.
  - set "PATH=%MINICONDA%\condabin:%PATH%"
  - conda info -a
  - conda config --add channels conda-forge
  - conda config --set channel_priority strict
  - conda env create --file="${ENV_FILE}"

test_script:
  # this uses condabin/conda.bat because of our PATH modification above
  - conda activate test
  - conda list
  - pytest geopandas -v
