.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_create_geopandas_from_pandas.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_create_geopandas_from_pandas.py:


Creating a GeoDataFrame from a DataFrame with coordinates
---------------------------------------------------------

This example shows how to create a ``GeoDataFrame`` when starting from
a *regular* ``DataFrame`` that has coordinates either WKT
(`well-known text <https://en.wikipedia.org/wiki/Well-known_text>`_)
format, or in
two columns.




.. code-block:: python

    import pandas as pd
    import geopandas
    import matplotlib.pyplot as plt







From longitudes and latitudes
=============================

First, let's consider a ``DataFrame`` containing cities and their respective
longitudes and latitudes.



.. code-block:: python


    df = pd.DataFrame(
        {'City': ['Buenos Aires', 'Brasilia', 'Santiago', 'Bogota', 'Caracas'],
         'Country': ['Argentina', 'Brazil', 'Chile', 'Colombia', 'Venezuela'],
         'Latitude': [-34.58, -15.78, -33.45, 4.60, 10.48],
         'Longitude': [-58.66, -47.91, -70.66, -74.08, -66.86]})







A ``GeoDataFrame`` needs a ``shapely`` object. We use geopandas
``points_from_xy()`` to transform **Longitude** and **Latitude** into a list
of ``shapely.Point`` objects and set it as a ``geometry`` while creating the
``GeoDataFrame``. (note that ``points_from_xy()`` is an enhanced wrapper for
``[Point(x, y) for x, y in zip(df.Longitude, df.Latitude)]``)



.. code-block:: python


    gdf = geopandas.GeoDataFrame(
        df, geometry=geopandas.points_from_xy(df.Longitude, df.Latitude))








``gdf`` looks like this :



.. code-block:: python


    print(gdf.head())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    City    Country  Latitude  Longitude               geometry
    0  Buenos Aires  Argentina    -34.58     -58.66  POINT (-58.66 -34.58)
    1      Brasilia     Brazil    -15.78     -47.91  POINT (-47.91 -15.78)
    2      Santiago      Chile    -33.45     -70.66  POINT (-70.66 -33.45)
    3        Bogota   Colombia      4.60     -74.08     POINT (-74.08 4.6)
    4       Caracas  Venezuela     10.48     -66.86   POINT (-66.86 10.48)


Finally, we plot the coordinates over a country-level map.



.. code-block:: python


    world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))

    # We restrict to South America.
    ax = world[world.continent == 'South America'].plot(
        color='white', edgecolor='black')

    # We can now plot our GeoDataFrame.
    gdf.plot(ax=ax, color='red')

    plt.show()




.. image:: /gallery/images/sphx_glr_create_geopandas_from_pandas_001.png
    :class: sphx-glr-single-img




From WKT format
===============
Here, we consider a ``DataFrame`` having coordinates in WKT format.



.. code-block:: python


    df = pd.DataFrame(
        {'City': ['Buenos Aires', 'Brasilia', 'Santiago', 'Bogota', 'Caracas'],
         'Country': ['Argentina', 'Brazil', 'Chile', 'Colombia', 'Venezuela'],
         'Coordinates': ['POINT(-34.58 -58.66)', 'POINT(-15.78 -47.91)',
                         'POINT(-33.45 -70.66)', 'POINT(4.60 -74.08)',
                         'POINT(10.48 -66.86)']})







We use ``shapely.wkt`` sub-module to parse wkt format:



.. code-block:: python

    from shapely import wkt

    df['Coordinates'] = df['Coordinates'].apply(wkt.loads)







The ``GeoDataFrame`` is constructed as follows :



.. code-block:: python


    gdf = geopandas.GeoDataFrame(df, geometry='Coordinates')

    print(gdf.head())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    City    Country            Coordinates
    0  Buenos Aires  Argentina  POINT (-34.58 -58.66)
    1      Brasilia     Brazil  POINT (-15.78 -47.91)
    2      Santiago      Chile  POINT (-33.45 -70.66)
    3        Bogota   Colombia     POINT (4.6 -74.08)
    4       Caracas  Venezuela   POINT (10.48 -66.86)


**Total running time of the script:** ( 0 minutes  0.215 seconds)


.. _sphx_glr_download_gallery_create_geopandas_from_pandas.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: create_geopandas_from_pandas.py <create_geopandas_from_pandas.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: create_geopandas_from_pandas.ipynb <create_geopandas_from_pandas.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
